#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_gpu_shader_fp64 : enable

#define WORKGROUP_SIZE 32

layout (local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

struct Particle {
	dvec3 position;
	double mass;
	dvec3 prevPosition;
	double invMass;
	dvec3 velocity;
	double null;
//	dvec4 null; // external force?
};

layout(std430, set = 0, binding = 0) buffer particlesBuffer {
	Particle[] particles;
};

readonly layout(push_constant) uniform constants {
	double dt;
	double invDtSquared;
	double compliance;
	int count;
	int	constraintOffset;
};

void main() {
	if (gl_GlobalInvocationID.x >= count) return;

	particles[gl_GlobalInvocationID.x].velocity = (particles[gl_GlobalInvocationID.x].position - particles[gl_GlobalInvocationID.x].prevPosition) / dt;

	/*
	velocity.set(position).sub(prevPosition).mul(dtInv);
	*/
}